Statements
- Whitespace does not matter, but follow best practices for readability
- Console.readline();
    - Reads in input 
-Console.WriteLine();
    - Reads out a statement or text 

Comments
- // starts a comment for a single line 
- /* Starts a multi line comment 
        Comments go here 
        then here 
- */ Ends multi line comment 
- Highlight multiple lines and comment out with CTRL + K + C
- Uncomment with CTRL + K + U

Key Words 
- int, ref, in, return, class, while, string, etc 

Variables 
- Hold values 
- string x = "Hi" 
- Types
    - Int, string, date, etc 

Declaration statements 
- int age; 
    - integer variable age; 
    - age = 22 
    - Case matters 

Data Types
- Strongly typed language
- Predefined Types 
    - Built in and used out of the box like INT 
-Built In 
    - Bool
    - Int 
    - float 
    -double 
    - decimal has highest precision
    - char - single characters 
    - byte 8 bit integers 
        - 0 to 255 
    - short 
    - object 
    - string 

Operators
- =, +, >
- Follow order of Operations
- Can use variable with operator 
- if month < 1, do something 
- use + for string concat 
- Compound operators month += 1
- VariableName-- 
    - Decreases by 1
    - or ++ increases by 1

Members
- Min / Max value
- int age = int.MaxValue or int.MinValue
- char type members 
    - char myChar = 'a'
    - bool isWhiteSpace = char.isWhiteSpace(myChar);
        - Returns true if myChar is whitespace 
    - bool isDigit = char.isDigit(myChar);
        - Returns true if its a digit 
    - bool is Punct = char.IsPunctuation(myChar);

DateTime Types 
- DateTime 
- TimeSpan 
- DateTime startDate = new DateTime(2025, 03, 28)
    - new initializes date
- DateTime today = DateTime.Today 
    - retruns current date 
- DateTime twoDaysLater = someDateTime.AddDays(2)
- DayOfWeek day = someDateTime.DayOfWeek;
- bool isDST = someDateTime.IsDaylightSavingTime();

Converting Data Types 
- Implicit 
    - int a = 123456789; 
    - long l = a;
    - converts integer to long integer 
- Explicit 
    - double d = 1234567.54
    - int a = (int) d; // convert to integer 

Implicit Typing 
- int a = 123; same as var a = 123; //will be an integer 
- C # implies / figures out the data type based on value 
- Data type decided at compile time 

Constants
- Const keyword
- Value cannot ever be changed within applicaiton
- Const int intRate = 0.07
    - intRate always stays 0.07

